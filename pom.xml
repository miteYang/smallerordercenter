<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!--<parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.3</version>
        <relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;
    </parent>-->
    <groupId>com.rickie.midend</groupId>
    <artifactId>smallerordercenter</artifactId>
    <packaging>pom</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <modules>
        <module>user</module>
        <module>eureka</module>
        <module>eurekaclient</module>
        <module>getway</module>
        <module>rabbitmq</module>
    </modules>
    <name>smallerordercenter</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <junit.version>4.12</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <lombok.version>1.16.18</lombok.version>
        <mysql.version>8.0.18</mysql.version>
        <druid.version>1.1.16</druid.version>
        <mybatis.spring.boot.version>1.3.0</mybatis.spring.boot.version>
    </properties>
    <!-- 子模块继承之后，提供作用：锁定版本+子modlue不用写groupId和version  -->
    <dependencies>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>
        <!--<dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis.spring.boot.version}</version>
        </dependency>-->
        <dependency>
            <groupId>com.spring4all</groupId>
            <artifactId>spring-boot-starter-swagger</artifactId>
            <version>1.5.1.RELEASE</version>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.2.2.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Hoxton.SR1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>2.1.0.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>




        </dependencies>

    </dependencyManagement>

<!--    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <addResources>true</addResources>
                </configuration>
            </plugin>
        </plugins>
    </build>-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.3.6</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repository>http://192.168.79.128:5000/${project.name}:${project.version}</repository>
                    <tag>${project.version}</tag>
                </configuration>
            </plugin>
            <!--<plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.3.6</version>
                <configuration>
                    &lt;!&ndash; Docker 远程管理地址&ndash;&gt;
                    <dockerHost>http://192.168.79.128:2375</dockerHost>
                    &lt;!&ndash; Docker 推送镜像仓库地址&ndash;&gt;
                    <pushRegistry>http://192.168.79.128:5000</pushRegistry>
                    <images>
                        <image>
                            &lt;!&ndash;由于推送到私有镜像仓库，镜像名需要添加仓库地址&ndash;&gt;
                            <name>192.168.79.128:5000/demo/${project.name}:${project.version}</name>
                            &lt;!&ndash;定义镜像构建行为&ndash;&gt;
                            <build>
                                &lt;!&ndash;定义基础镜像&ndash;&gt;
                                <from>java:8</from>
                                <args>
                                    <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                </args>
                                &lt;!&ndash;定义哪些文件拷贝到容器中&ndash;&gt;
                                <assembly>
                                    &lt;!&ndash;定义拷贝到容器的目录&ndash;&gt;
                                    <targetDir>/</targetDir>
                                    &lt;!&ndash;只拷贝生成的jar包&ndash;&gt;
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                &lt;!&ndash;定义容器启动命令&ndash;&gt;
                                <entryPoint>["java", "-jar","/${project.build.finalName}.jar"]</entryPoint>
                                &lt;!&ndash;定义维护者&ndash;&gt;
                                <maintainer>mike</maintainer>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>-->
        </plugins>
    </build>

</project>
